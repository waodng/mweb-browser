<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Cys_CustomControls.Controls">

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent" Height="16" Padding="3" Width="16">
                        <Path x:Name="ExpandPath" Data="M0,0 L0,8 L8,0 z" Fill="#FFFFFF">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterY="4" CenterX="4"/>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="RenderTransform" TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterY="4" CenterX="4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MTreeViewItem.InputTextBox" TargetType="{x:Type TextBox}" >
        <Setter Property="Foreground" Value="{DynamicResource WebBrowserBrushes.InputTextBoxForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource WebBrowserBrushes.InputTextBoxBorderBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CaretBrush" Value="White"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="CharacterCasing" Value="Upper" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid x:Name="PART_Root">
                        <Border x:Name="Bg" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" CornerRadius="3">
                            <ScrollViewer x:Name="PART_ContentHost" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" Width="{Binding ElementName=Content,Path=ActualWidth}"
                                          BorderThickness="0" IsTabStop="False" HorizontalAlignment="Left" VerticalAlignment="Stretch" Background="Transparent" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="Bg" Property="BorderBrush"  Value="{DynamicResource CustomBrushes.LoginWindowTextHighlightedBrush}"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:MTreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="1,0,0,0"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Icon" Value="&#xe903;"/>
        <Setter Property="IsExpandedIcon" Value="&#xe605;"/>
        <Setter Property="IconForeground" Value="{DynamicResource WebBrowserBrushes.MTreeItemIconForeground}"/>
        <Setter Property="TextMaxWidth" Value="300"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MTreeViewItem}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" VerticalAlignment="Center" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"  Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <StackPanel Orientation="Horizontal" Margin="{TemplateBinding ItemMargin}">
                                <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                                <TextBlock x:Name ="PART_Icon"  Text="{TemplateBinding Icon}" Foreground="{TemplateBinding IconForeground}" VerticalAlignment="Center" Margin="5,0"/>
                                <Grid VerticalAlignment="Center" Height="35">
                                    <TextBlock x:Name="PART_Header" VerticalAlignment="Center" MaxWidth="{TemplateBinding TextMaxWidth}" TextTrimming="CharacterEllipsis" Text="{TemplateBinding Header}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <TextBox Height="23" x:Name="PART_EditText" Width="{TemplateBinding TextMaxWidth}" FontSize="{TemplateBinding FontSize}" Style="{StaticResource MTreeViewItem.InputTextBox}" Visibility="Collapsed" HorizontalAlignment="Stretch" Text="{Binding RelativeSource={RelativeSource AncestorType=local:MTreeViewItem}, Path=EditText,UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>
                            </StackPanel>
                        </Border>
                        <Grid Grid.Row="1">
                            <ItemsPresenter x:Name="ItemsHost"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter Property="Text" TargetName="PART_Icon" Value="{Binding RelativeSource={RelativeSource AncestorType=local:MTreeViewItem}, Path=IsExpandedIcon}"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource WebBrowserBrushes.MTreeItemIsSelectedBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEdit" Value="true">
                            <Setter TargetName="PART_EditText" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>